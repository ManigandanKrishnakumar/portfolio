{"version":3,"sources":["assets/mani-logo-white.svg","assets/mani-logo.svg","assets/dev-memoji.png","assets/dev.svg","assets/dev-dark.svg","assets/fonts/segoeuil.ttf","themes/light.js","themes/dark.js","constants/theme.js","helper-functions/getTheme.js","styled-components/GlobalStyles.js","components/Logo/Logo.js","components/ThemeSwitch/ThemeSwitch.js","components/Header/Header.js","custom-hooks/useTheme.js","services/ThemeService.js","components/UnderConstruction/UnderConstruction.js","constants/content/bannerContent.js","components/DevMemoji/DevMemoji.js","components/Banner/Banner.js","components/WorkSpaceImage/WorkSpaceImage.js","constants/content/aboutMeContent.js","components/AboutMeContent/AboutMeContent.js","components/AboutMe/AboutMe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","mainBgColor","highlightColor","fontColor","scrollThumbColor","highlightContrast","darkTheme","THEMES","getTheme","themeName","DARK","LIGHT","GlobalStyles","createGlobalStyle","props","theme","className","src","logoPurple","logoWhite","height","alt","onThemeChange","inputRef","React","createRef","useEffect","current","checked","type","id","ref","onClick","htmlFor","currentTheme","useState","setCurrentTheme","setUITheme","window","matchMedia","matches","BANNER_CONTENT","devImage","devLight","devDark","ABOUTME_CONTENT","App","useTheme","uiTheme","setUiTheme","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d928f350.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mani-logo-white.34ce1459.svg\";","module.exports = __webpack_public_path__ + \"static/media/mani-logo.16382323.svg\";","module.exports = __webpack_public_path__ + \"static/media/dev-memoji.7e73afa2.png\";","module.exports = __webpack_public_path__ + \"static/media/dev.155222f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/dev-dark.0495fd2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/segoeuil.11fd79bc.ttf\";","export default {\n  mainBgColor: '#f1eeee',\n  highlightColor: '#7510F7',\n  fontColor: '#141c3a',\n  scrollThumbColor: '#141c3a',\n  highlightContrast: '#f1eeee',\n};\n","const darkTheme = {\n  mainBgColor: '#282c34',\n  highlightColor: '#7c61c1',\n  fontColor: '#d4d6db',\n  scrollThumbColor: '#b4b7bc',\n  highlightContrast: '#d4d6db',\n};\n\nexport default darkTheme;\n","export const THEMES = {\n  LIGHT: \"light\",\n  DARK: \"dark\",\n};\n","import {DARK, LIGHT} from '../themes';\nimport {THEMES} from '../constants/theme';\n\nexport const getTheme = (themeName) => {\n  switch (themeName) {\n    case THEMES.DARK:\n      return DARK;\n    case THEMES.LIGHT:\n      return LIGHT;\n    default:\n      return LIGHT;\n  }\n};\n","import {createGlobalStyle} from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  :root {\n    --main-bg-color: ${(props) => props.theme.mainBgColor};\n    --highlight-color: ${(props) => props.theme.highlightColor};\n    --font-color: ${(props) => props.theme.fontColor};\n    --highlight-contrast: ${(props) => props.theme.highlightContrast};\n  }\n\n  ::-webkit-scrollbar {\n    width: 6px;\n    border-left: 1px solid #E6ECF8;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: ${(props) => props.theme.scrollThumbColor};\n    border-radius: 10px;\n  }\n\n  body {\n    font-family: 'SLight'\n  }\n\n  body div {\n    overflow: hidden;\n    background-color: var(--main-bg-color);\n  }\n\n  p, span, h1, h2 {\n    color: var(--font-color);\n    animation: fadeIn 1s;\n  }\n\n  p {\n    font-size: 1.3rem;\n  }\n\n  h2 {\n    font-size: 2rem;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    } to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport default GlobalStyles;\n","import React from 'react';\nimport logoWhite from '../../assets/mani-logo-white.svg';\nimport logoPurple from '../../assets/mani-logo.svg';\nimport {THEMES} from '../../constants/theme';\nimport './Logo.scss';\n\nexport default ({theme}) => {\n  return (\n    <div className=\"logo-container\">\n      <img\n        src={theme === THEMES.LIGHT ? logoPurple : logoWhite}\n        className=\"logo-img\"\n        height=\"48\"\n        alt=\"logo\"\n      />\n    </div>\n  );\n};\n","import React, {useEffect} from 'react';\nimport './ThemeSwitch.scss';\nimport {THEMES} from '../../constants/theme';\nimport {IoIosSunny, IoIosMoon} from 'react-icons/io';\n\nexport default ({onThemeChange, theme}) => {\n  const inputRef = React.createRef();\n  const onCheck = () => {\n    inputRef.current.checked\n      ? onThemeChange(THEMES.DARK)\n      : onThemeChange(THEMES.LIGHT);\n  };\n  useEffect(() => {\n    inputRef.current.checked = theme === THEMES.DARK;\n  }, [theme, inputRef]);\n  return (\n    <div className=\"theme-switch-container\">\n      <IoIosSunny className=\"day-icon\" />\n      <div className=\"switch-checkbox\">\n        <input type=\"checkbox\" id=\"switch\" ref={inputRef} onClick={onCheck} />\n        <label htmlFor=\"switch\"></label>\n      </div>\n      <IoIosMoon className=\"night-icon\" />\n    </div>\n  );\n};\n","import React from 'react';\nimport Logo from '../Logo/Logo';\nimport './Header.scss';\nimport ThemeSwitch from '../ThemeSwitch/ThemeSwitch';\n\nexport default ({currentTheme, onThemeChange}) => {\n  return (\n    <div className=\"header-container\">\n      <Logo theme={currentTheme} />\n      <ThemeSwitch theme={currentTheme} onThemeChange={onThemeChange} />\n    </div>\n  );\n};\n","import {useState, useEffect} from 'react';\nimport {InitializeTheme} from '../services/ThemeService';\n\nexport default () => {\n  const [currentTheme, setCurrentTheme] = useState();\n  useEffect(() => {\n    InitializeTheme(setCurrentTheme);\n  }, []);\n\n  return [currentTheme, setCurrentTheme];\n};\n","import {THEMES} from '../constants/theme';\n\n/**\n * This function initializes theme\n * @param {string} setUITheme\n */\nexport const InitializeTheme = (setUITheme) => {\n  if (\n    window.matchMedia &&\n    window.matchMedia('(prefers-color-scheme: dark)').matches\n  ) {\n    setUITheme(THEMES.DARK);\n  } else {\n    setUITheme(THEMES.LIGHT);\n  }\n};\n","import React from 'react';\nimport './UnderConstruction.scss';\n\nimport {IoIosConstruct} from 'react-icons/io';\n\nexport default () => {\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <IoIosConstruct className=\"construction-icon\" />\n        <p className=\"description\">\n          This site is under construction. Please Visit back Later.\n        </p>\n      </div>\n    </div>\n  );\n};\n","export const BANNER_CONTENT = {\n  HELLO_MSG: `Hi, I'm Mani. Full Stack Developer & Mentor`,\n  MOTTO: 'I code and build beautiful things and I love what I do',\n};\n","import React from 'react';\nimport './DevMemoji.scss';\nimport devImage from '../../assets/dev-memoji.png';\n\nexport default () => {\n  return (\n    <div className=\"memoji-container\">\n      <img src={devImage} className=\"dev-image\" alt=\"dev-memoji\" />\n    </div>\n  );\n};\n","import React from 'react';\nimport './Banner.scss';\nimport {BANNER_CONTENT} from '../../constants/content/bannerContent';\nimport DevMemoji from '../DevMemoji/DevMemoji';\n\nexport default () => {\n  return (\n    <div className=\"banner-container\">\n      <h1 className=\"hello-message\">{BANNER_CONTENT.HELLO_MSG}</h1>\n      <p className=\"motto\">{BANNER_CONTENT.MOTTO}</p>\n      <DevMemoji />\n    </div>\n  );\n};\n","import React from 'react';\nimport './WorkSpaceImage.scss';\nimport devLight from '../../assets/dev.svg';\nimport devDark from '../../assets/dev-dark.svg';\nimport {THEMES} from '../../constants/theme';\n\nexport default ({currentTheme}) => {\n  return (\n    <div className=\"workspace-img-container\">\n      <div className=\"workspace-img-wrapper\">\n        <img\n          src={currentTheme === THEMES.LIGHT ? devLight : devDark}\n          className=\"work-space-image\"\n          alt=\"work-space-svg\"\n        />\n      </div>\n    </div>\n  );\n};\n","export const ABOUTME_CONTENT = {\n  GREETING: 'Hi, Nice to meet you.',\n  ABOUT_ME: `Since beginning my journey as a freelance designer nearly 10 years ago, I've done remote work for agencies, consulted for startups, and collaborated with talented people to create digital products for both business and consumer use. I'm quietly confident, naturally curious, and perpetually working on improving my chops one design problem at a time.`,\n};\n","import React from 'react';\nimport './AboutMeContent.scss';\nimport {ABOUTME_CONTENT} from '../../constants/content/aboutMeContent';\n\nexport default () => {\n  return (\n    <div className=\"about-me-content-container\">\n      <div className=\"about-me-wrapper\">\n        <h2>{ABOUTME_CONTENT.GREETING}</h2>\n        <p className=\"about-me\">{ABOUTME_CONTENT.ABOUT_ME}</p>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './AboutMe.scss';\nimport WorkSpaceImage from '../WorkSpaceImage/WorkSpaceImage';\nimport AboutMeContent from '../AboutMeContent/AboutMeContent';\n\nexport default ({currentTheme}) => {\n  return (\n    <div className=\"about-me-container\">\n      <WorkSpaceImage currentTheme={currentTheme} />\n      <AboutMeContent />\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport {ThemeProvider} from 'styled-components';\nimport {getTheme} from './helper-functions/getTheme';\nimport GlobalStyles from './styled-components/GlobalStyles';\nimport Header from './components/Header/Header';\nimport useTheme from './custom-hooks/useTheme';\nimport UnderConstruction from './components/UnderConstruction/UnderConstruction';\nimport Banner from './components/Banner/Banner';\nimport AboutMe from './components/AboutMe/AboutMe';\n\nfunction App() {\n  const [uiTheme, setUiTheme] = useTheme();\n  return (\n    <ThemeProvider theme={getTheme(uiTheme)}>\n      <GlobalStyles />\n\n      {/* START: Application */}\n      <div className=\"App\">\n        <Header currentTheme={uiTheme} onThemeChange={setUiTheme} />\n        <Banner />\n        <AboutMe currentTheme={uiTheme} />\n        <UnderConstruction />\n      </div>\n      {/* END: Application */}\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/fonts/segoeuil.ttf';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}